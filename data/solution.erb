#!/usr/env/bin/ruby
# encoding: utf-8

# The Problem: <%= url_for(@data[:id]) %>
# <%= "=" * 76 %>
# <%= @data[:text].break_even(76, "# ") %>
# <%= "=" * 76 %>
# Solved by: <%= @data[:solved_by] %> users.
# Time Spent on Problem: 0 minute.
# Solution Thread: <%= thread_for(@data[:id]) %>
# <%= "=" * 76 %>

require 'euler'

module Euler
  class Solution<%= @data[:id] %> < Base
    def environment
      # this method sets up environment for this problem.
      # you should only set options for this problem here.

      default_input 1000   # input can take arbitrary values, specify a default value.
      # fixed_input 1000   # if solution or problem does not allow arbitrary values for input.
      # read_input         # input is read from the problem statement itself

      # use test cases? can be defined multiple times.
      # test cases are only available, when input is set to be: "default"
      # test_case 10, 23    # output should be 23 when input is 10

      # try method named: "solution_<n>" for solving this problem.
      try_solution 1        # assume "solution_1" to be current

      # uncomment the following, when this problem has been solved.
      # mark_as_solved
    end

    def solution_1
      # start writing your solution here..
      # input is available in variable: "@input"
    end

    def solution_2
      # a second variation of the solution to this problem
      # this solution can be run by setting: "try_solution 2" inside "run" method

      # delete this method, if not needed, though it wont harm! :)
    end

    def named_solution
      # a third variation of the solution to this problem
      # this solution can be run by setting: "try_solution 'named_solution'" inside "run" method
    end

  end
end
